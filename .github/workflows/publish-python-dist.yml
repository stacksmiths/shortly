name: publish-python-dist

on: push

env:
  PYTHON_VERSION: 3.13

jobs:
  build:
    name: Build distribution üì¶
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install Build Requirements
        run: |
          poetry self add poetry-core
          poetry install --no-root

      - name: Build the Python distribution
        run: poetry build

      - name: Upload built artifacts
        uses: actions/upload-artifact@v4
        with:
          name: shortly-${{ matrix.python-version }}
          path: dist/

  test:
    name: Test package installation üß™
    needs: build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Download artifact for Python ${{ matrix.python-version }}
        uses: actions/download-artifact@v4
        with:
          name: shortly-${{ matrix.python-version }}
          path: dist/

      - name: Upgrade pip
        run: python3 -m pip install --upgrade pip

      - name: Test installation
        run: pip install dist/*.whl

      - name: Assert Dependencies Installed
        run: |
          REQUIRED_PACKAGES=("fastapi" "pydantic" "qrcode" "uvicorn")
          for package in "${REQUIRED_PACKAGES[@]}"; do
            if ! python3 -m pip show "$package" > /dev/null 2>&1; then
              echo "Error: $package is not installed."
              exit 1
            else
              echo "Verified: $package is installed."
            fi
          done

  publish-to-pypi:
    name: Publish Python üêç distribution üì¶ to PyPI
    if: startsWith(github.ref, 'refs/tags/') # only publish to PyPI on tag pushes
    needs:
      - test
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/shortly
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: shortly-${{ env.PYTHON_VERSION }}
          path: dist/
      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Create GitHub Release
    needs:
      - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write # IMPORTANT: mandatory for making GitHub Releases
      id-token: write # IMPORTANT: mandatory for sigstore

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: shortly-${{ env.PYTHON_VERSION }}
          path: dist/
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >
          gh release create
          "$GITHUB_REF_NAME"
          --repo "$GITHUB_REPOSITORY"
          --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >
          gh release upload
          "$GITHUB_REF_NAME" dist/**
          --repo "$GITHUB_REPOSITORY"

  publish-to-testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI
    needs:
      - test
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/shortly

    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: shortly-${{ env.PYTHON_VERSION }}
          path: dist/

      - name: Publish distribution üì¶ to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
